{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/project/Documents/smarthome/FrontEnd/src/components/testing/ListTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\"; //import EditTodo from \"./EditTodo\"\n\nconst ListItem = () => {\n  _s();\n\n  const [items, setItems] = useState([]); ///delete todo function\n\n  const deleteTodo = async id => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:8000/items/${id}`, {\n        method: \"DELETE\"\n      });\n      setTodos(items.filter(item => item.item_id !== id));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const getItems = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/items\");\n      const jsonData = await response.json();\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getItems();\n  }, []);\n  console.log(items);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\"  \", /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thread\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.item_data_description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteItem(item.item_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, item.item_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this);\n};\n\n_s(ListItem, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = ListItem;\nexport default ListTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["/home/project/Documents/smarthome/FrontEnd/src/components/testing/ListTodo.js"],"names":["React","Fragment","useEffect","useState","ListItem","items","setItems","deleteTodo","id","fetch","method","setTodos","filter","item","item_id","error","console","message","getItems","response","jsonData","json","err","log","map","item_data_description","deleteItem","ListTodos"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAmCC,QAAnC,QAAmD,OAAnD,C,CAEA;;AAEA,MAAMC,QAAQ,GAAG,MAAK;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBH,QAAQ,CAAC,EAAD,CAAjC,CADkB,CAElB;;AAEA,QAAMI,UAAU,GAAE,MAAMC,EAAN,IAAY;AAC/B,QAAI;AACA,YAAMD,UAAU,GAAE,MAAME,KAAK,CAAE,+BAA8BD,EAAG,EAAnC,EAC7B;AACIE,QAAAA,MAAM,EAAC;AADX,OAD6B,CAA7B;AAKAC,MAAAA,QAAQ,CAACN,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiBN,EAAtC,CAAD,CAAR;AACH,KAPD,CAOE,OAAOO,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACH;AAGC,GAbD;;AAgBA,QAAMC,QAAQ,GAAE,YAAW;AAC3B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,6BAAD,CAA5B;AAGA,YAAMW,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAvB;AACAV,MAAAA,QAAQ,CAACS,QAAD,CAAR;AACH,KAND,CAME,OAAOE,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACD,KAAR,CAAcO,GAAG,CAACL,OAAlB;AACH;AAGA,GAZD;;AAaAf,EAAAA,SAAS,CAAC,MAAI;AACXgB,IAAAA,QAAQ;AAEV,GAHQ,EAGP,EAHO,CAAT;AAIJF,EAAAA,OAAO,CAACO,GAAR,CAAYlB,KAAZ;AACA,sBACA,QAAC,QAAD;AAAA,eACE,IADF,eAEA;AAAO,MAAA,KAAK,EAAG,wBAAf;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBAEDA,KAAK,CAACmB,GAAN,CAAUX,IAAI,iBACX;AAAA,kCAEI;AAAA,sBAAKA,IAAI,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAOI;AAAA,mCACI;AACA,cAAA,SAAS,EAAC,gBADV;AAEA,cAAA,OAAO,EAAE,MAAMC,UAAU,CAACb,IAAI,CAACC,OAAN,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA,WAASD,IAAI,CAACC,OAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AAFC;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAuCE,CA7EF;;GAAMV,Q;;KAAAA,Q;AA8EN,eAAeuB,SAAf","sourcesContent":["import React, { Fragment,useEffect,useState } from \"react\";\n\n//import EditTodo from \"./EditTodo\"\n\nconst ListItem = () =>{\n    const [items, setItems]= useState([]);\n    ///delete todo function\n    \n    const deleteTodo =async(id) =>{\n   try {\n       const deleteTodo =await fetch(`http://localhost:8000/items/${id}`,\n       {\n           method:\"DELETE\"\n       }\n       )\n       setTodos(items.filter(item => item.item_id !== id));\n   } catch (error) {\n       console.error(error.message);\n   }\n\n\n    }\n    \n    \n    const getItems= async () =>{\n    try {\n        const response = await fetch(\"http://localhost:8000/items\",\n        \n        )\n        const jsonData = await response.json();\n        setTodos(jsonData);\n    } catch (err) {\n        console.error(err.message);\n    }\n\n\n    }\n    useEffect(()=>{\n       getItems();\n\n    },[]);\nconsole.log(items)\nreturn( \n<Fragment>\n {\"  \"}\n<table class = \"table mt-5 text-center\">\n    <thread>\n        <tr>\n            <th>Description</th>\n            <th>Edit</th>\n            <th>Delete</th>\n            </tr>\n    </thread>\n    <tbody>\n        {}\n  {items.map(item=>(\n      <tr key={item.item_id}>\n\n          <td>{item.item_data_description}</td>\n          <td>\n              {/* <EditTodo todo={todo}/> */}\n              \n              </td>\n          <td>\n              <button \n              className=\"btn btn-danger\"\n              onClick={() => deleteItem(item.item_id)}\n              >Delete</button></td>    \n     </tr>\n\n\n  ))}\n\n        \n        \n    </tbody>\n</table>\n\n\n</Fragment>\n\n)};\nexport default ListTodos;"]},"metadata":{},"sourceType":"module"}